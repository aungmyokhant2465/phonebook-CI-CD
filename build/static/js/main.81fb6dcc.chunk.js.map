{"version":3,"sources":["services/persons.js","components/FilterPerson.js","components/Persons.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseURL","axios","get","then","res","data","person","post","catch","error","response","id","delete","changedData","put","FilterPerson","props","value","filterName","onChange","handlefilterName","Person","handleDelete","name","number","onClick","Persons","filteredPersons","map","handleDeleteOf","PersonForm","createNewPerson","newName","handleNewName","newNumber","handleNewNumber","onSubmit","type","styles","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","success","Notification","message","style","isError","App","useState","persons","setPersons","setFilteredPersons","setNewName","setNewNumber","setfilterName","notification","setNotification","useEffect","personService","phones","console","log","e","target","toLowerCase","filter","p","includes","preventDefault","find","window","confirm","oldPerson","changedPerson","repalcePersonNumber","createdPerson","setTimeout","concat","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81fb6dcc.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios'\n\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseURL)\n        .then(res => res.data)\n}\n\nconst create = (person) => {\n    return axios.post(baseURL, person)\n        .then(res => {\n            return res.data\n        }).catch(error => {\n            throw error.response.data\n        })\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseURL}/${id}`)\n}\n\nconst update = (changedData) => {\n    return axios.put(`${baseURL}/${changedData.id}`, changedData)\n        .then(res => res.data)\n}\n\nexport default {\n    getAll,\n    create,\n    remove,\n    update\n}","import React from 'react'\n\nconst FilterPerson = (props) => {\n    return (\n        <p>\n            filter shown with <input value={props.filterName} onChange={props.handlefilterName}/>\n        </p>\n    )\n}\n\nexport default FilterPerson","import React from 'react'\n\nconst Person = ({person, handleDelete}) => {\n    return (\n      <p>\n        {person.name} {person.number}\n        <button onClick={handleDelete}>delete</button>\n      </p>\n    )\n}\n\nconst Persons = (props) => {\n    return (\n        <div>\n          {\n            props.filteredPersons.map(person => \n              <Person key={person.name} person={person} handleDelete={() => props.handleDeleteOf(person.id)}/>\n            )\n          }\n        </div>\n      )\n}\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = ({createNewPerson, newName, handleNewName, newNumber, handleNewNumber}) => {\n    return (\n      <form onSubmit={createNewPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNewName}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNewNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n  }\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = (props) => {\n    if(!props.message) {\n        return null\n    }\n    return (\n        <div style={props.isError ? styles.error : styles.success}>\n            {props.message}\n        </div>\n    )\n}\n\nconst styles = {\n    error: {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    },\n    success: {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nimport FilterPerson from './components/FilterPerson'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [filteredPersons, setFilteredPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterName, setfilterName] = useState('')\n  const [notification, setNotification] = useState({})\n\n  const checkExist = (name) => {\n    return persons.find(p => p.name === name)\n  }\n\n  const handleNewName = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNewNumber = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const repalcePersonNumber = (name) => {\n    const oldPerson = persons.find(p => p.name === name)\n    const changedPerson = { ...oldPerson, number: newNumber }\n    personService.update(changedPerson)\n      .then(person => {\n        setPersons(persons.map(p => p.id !== person.id ? p : person))\n        setFilteredPersons(persons.map(p => p.id !== person.id ? p : person))\n      })\n  }\n\n  const createNewPerson = (e) => {\n    e.preventDefault()\n    if(checkExist(newName)) {\n      let confirm = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if(confirm) {\n        repalcePersonNumber(newName)\n      }\n      return\n    }\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n    personService.create(newPerson)\n      .then(createdPerson => {\n        setNotification({message: `Added ${createdPerson.name}`, isError: false})\n        setTimeout(() => {\n          setNotification({})\n        }, 3000)\n        setPersons(persons.concat(createdPerson))\n        setFilteredPersons(persons.concat(createdPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(err => {\n        setNotification({message: err.error, isError: true})\n        setTimeout(() => {\n          setNotification({})\n        }, 3000)\n      })\n  }\n  \n  const handlefilterName = (e) => {\n    setfilterName(e.target.value.toLowerCase())\n    setFilteredPersons(persons.filter(p => p.name.toLowerCase().includes(e.target.value.toLowerCase())))\n  }\n\n  const fetchPersons = () => {\n    personService.getAll()\n      .then(phones => {\n        setPersons(phones)\n        setFilteredPersons(phones)\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n  const personDeleteOf = (id) => {\n    let person = persons.find(p => p.id === id)\n    let confirm = window.confirm(`Delete ${person.name} ?`)\n    if(confirm) {\n      personService.remove(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          setFilteredPersons(persons.filter(p => p.id !== id))\n        })\n        .catch(() => {\n          setNotification({message: `Information of ${person.name} has already been removed from server`, isError: true})\n          setTimeout(() => {\n            setNotification({})\n          }, 3000)\n        })\n    }\n  }\n\n  useEffect(fetchPersons, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification.message} isError={notification.isError} />\n      <FilterPerson filterName={filterName} handlefilterName={handlefilterName}/>\n      <h2>add a new</h2>\n      <PersonForm createNewPerson={createNewPerson} newName={newName} newNumber={newNumber} handleNewName={handleNewName} handleNewNumber={handleNewNumber} />\n      <h2>Numbers</h2>\n      <Persons filteredPersons={filteredPersons} handleDeleteOf={personDeleteOf} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}